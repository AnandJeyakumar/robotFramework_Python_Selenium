image: python:3.12-slim

pipelines:
  default:
    - step:
        name: Run Robot Framework Tests
        caches:
          - pip
        script:
          # Install dependencies for Chrome and other tools
          - apt-get update && apt-get install -y wget unzip chromium-driver chromium libgdk-pixbuf2.0-0 libxss1 libappindicator3-1 libasound2 fonts-liberation libnspr4 libnss3 libx11-xcb1 libgbm1

          # Install Chrome for Selenium tests
          - sudo apt-get update
          - sudo apt-get install -y wget gnupg
          - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          - sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          - sudo apt-get update
          - sudo apt-get install -y google-chrome-stable
          - google-chrome-stable --version

          # Install Chrome Dependencies
          - sudo apt-get update
          - sudo apt-get install -y \
              libxss1 \
              libappindicator3-1 \
              libindicator7 \
              fonts-liberation \
              libnss3 \
              libgdk-pixbuf2.0-0 \
              libnspr4 \
              xdg-utils \
              libgbm-dev \
              libasound2 \
              libatk-bridge2.0-0 \
              libatk1.0-0 \
              libcups2 \
              libxcomposite1 \
              libxrandr2 \
              libxi6 \
              libxtst6 \
              libnss3-dev \
              libcurl4 \
              google-chrome-stable

          # Install xvfb (X Virtual FrameBuffer)
          - sudo apt-get install -y xvfb

          # Ensure Chromium works in a headless environment
          - apt-get install -y libgl1-mesa-glx libegl1-mesa

          # Set the CHROME_BIN environment variable to the path of the Chromium binary
          - export CHROME_BIN=/usr/bin/google-chrome

          # Install Python dependencies
          - python3 -m venv venv
          - source venv/bin/activate  # Activate the virtual environment
          - pip install --upgrade pip
          - pip install -r tests/requirements.txt  # Install dependencies from requirements.txt

          # Create results directory
          - mkdir -p results

          # Run Robot Framework tests with no-sandbox flag in headless mode
          - robot --variable CHROME_OPTIONS:"--headless --no-sandbox --disable-dev-shm-usage" --outputdir results/ tests/

        artifacts:
          - results/**
